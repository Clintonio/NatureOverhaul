package net.minecraft.src;import moapi.ModOptionsAPI;import moapi.ModBooleanOption;/*** Mushroom Item Representation for varied mushrooms.** @author	Clinton Alexander* @version	1.0.0.0*/public class ItemMushroom extends ItemPlantable {	    public ItemMushroom(int i)    {        super(i);    }    public int getPlacedBlockMetadata(int i)    {        return i;    }		/**	* Check if the item can be planted on top of the 	* block with the idBelow at i, j, k	*	* @param	belowID		ID of block below	* @param	age			Age of item	* @return 	True when plantable	*/	public boolean plantable(World world, int i, int j, int k, int belowID, int age) {		boolean shroomGrow 	= ((ModBooleanOption) mod_AutoForest.shrooms.getOption("ShroomsGrow")).getValue();		return ((shroomGrow) && (shroomPlant(belowID)));	}		/**	* Check if the current plant is a shroom and whether it should plant	* Shrooms can only not plant on grass or in daylight	*	* @param	belowID		ID of below block	* @return	true if can plant and is shroom	*/	private boolean shroomPlant(int belowID) {		return ((belowID != Block.glass.blockID) && (belowID != Block.ice.blockID));	}		/**	* Get the velocities of this item when it is created	*	* @param	baseSpeed	Base speed of item	* @return	Array of speeds in format [x, y, z] velocities	*/	public float[] getVelocities(double baseSpeed) {		float[] out = new float[3];				if((shiftedIndex - 256) == 39) {			double circleDist = baseSpeed * 2;			out[0] = (float) (circleDist - (Math.random() * circleDist)) * randSign();			out[1] = (float) (baseSpeed * 3);			out[2] = (float) (Math.pow(circleDist, 2) - Math.pow(out[0], 2)) * randSign();		}				return out;	}}